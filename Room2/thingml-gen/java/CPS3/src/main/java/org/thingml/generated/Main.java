/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
import org.thingml.generated.gui.*;
public class Main {
//Things
public static PIM PIM_pim;
public static TimerJava TimerJava_g_temp;
public static OnOffSet OnOffSet_onoff1;
public static TimerJava TimerJava_timer;
public static TellstickManager TellstickManager_tlstick;
public static ThermometerSet ThermometerSet_T1;
public static TimerJava TimerJava_g_humn;
public static GadgetSimMock GadgetSim_gdg;
public static HumanMock Human_myself;
public static OnOffSimMock OnOffSim_onoffobs;
public static TempSimMock TempSim_tg;
public static void main(String args[]) {
//Things
final short[] T1_thermometers_array = new short[25];
final String[] T1_thermotext_array = new String[25];
final float[] T1_thermoweight_array = new float[25];
final float[] T1_thermoval_array = new float[25];
final float[] T1_weight_array = new float[2];
ThermometerSet_T1 = (ThermometerSet) new ThermometerSet("T1 (ThermometerSet)", (String)null, T1_thermometers_array, T1_thermotext_array, T1_thermoweight_array, T1_thermoval_array, (short) (0), (short)0, (short) (10000), (int)0, (short)0, (float)0.0f, (boolean)false, T1_weight_array, (short)0).buildBehavior(null, null);
TimerJava_g_temp = (TimerJava) new TimerJava("g_temp (TimerJava)", (java.util.Timer) (new java.util.Timer()), (java.util.TimerTask)null).buildBehavior(null, null);
PIM_pim = (PIM) new PIM("pim (PIM)", (float) (20), (float)0.0f, (short)0, (short)0, (short) (1), (short)0, (float) (0)).buildBehavior(null, null);
GadgetSim_gdg = (GadgetSimMock) new GadgetSimMock("GadgetSim_gdg").buildBehavior(null, null);
TellstickManager_tlstick = (TellstickManager) new TellstickManager("tlstick (TellstickManager)", (String)null, (short)0, (String)null, (String)null, (short)0, (short)0, (short)0, (float)0.0f, (int)0, (int)0, (String)null, (String)null, (int)0, (String)null, (int)0, (float)0.0f).buildBehavior(null, null);
TimerJava_timer = (TimerJava) new TimerJava("timer (TimerJava)", (java.util.Timer) (new java.util.Timer()), (java.util.TimerTask)null).buildBehavior(null, null);
TempSim_tg = (TempSimMock) new TempSimMock("TempSim_tg").buildBehavior(null, null);
Human_myself = (HumanMock) new HumanMock("Human_myself").buildBehavior(null, null);
TimerJava_g_humn = (TimerJava) new TimerJava("g_humn (TimerJava)", (java.util.Timer) (new java.util.Timer()), (java.util.TimerTask)null).buildBehavior(null, null);
final short[] onoff1_onoffswitches_array = new short[25];
final boolean[] onoff1_poweron_array = new boolean[25];
OnOffSet_onoff1 = (OnOffSet) new OnOffSet("onoff1 (OnOffSet)", (String)null, onoff1_onoffswitches_array, (short) (0), onoff1_poweron_array, (short)0, (short)0, (int)0, (boolean)false, (int)0).buildBehavior(null, null);
OnOffSim_onoffobs = (OnOffSimMock) new OnOffSimMock("OnOffSim_onoffobs").buildBehavior(null, null);
//Connecting internal ports...
//Connectors
ThermometerSet_T1.getShow_values_port().addListener(TempSim_tg.getShow_values_port());
PIM_pim.getRequest_sensor_port().addListener(ThermometerSet_T1.getRequire_val_port());
TimerJava_g_temp.getTimer_port().addListener(PIM_pim.getGuard_temperature_port());
PIM_pim.getGuard_temperature_port().addListener(TimerJava_g_temp.getTimer_port());
PIM_pim.getHuman_output_port().addListener(Human_myself.getGet_values_port());
OnOffSet_onoff1.getShow_val_port().addListener(OnOffSim_onoffobs.getShow_onoff_port());
TempSim_tg.getGive_values_port().addListener(ThermometerSet_T1.getGet_values_port());
TellstickManager_tlstick.getTo_onoff1_port().addListener(OnOffSet_onoff1.getInitial_port());
TellstickManager_tlstick.getTo_T1_port().addListener(ThermometerSet_T1.getInitial_port());
TellstickManager_tlstick.getTo_gdg_port().addListener(GadgetSim_gdg.getShow_gadgets_port());
TimerJava_g_humn.getTimer_port().addListener(PIM_pim.getGuard_human_port());
PIM_pim.getGuard_human_port().addListener(TimerJava_g_humn.getTimer_port());
ThermometerSet_T1.getProvide_val_port().addListener(PIM_pim.getGet_sensor_port());
TimerJava_timer.getTimer_port().addListener(ThermometerSet_T1.getTimer_port());
ThermometerSet_T1.getTimer_port().addListener(TimerJava_timer.getTimer_port());
Human_myself.getSend_cmd_port().addListener(PIM_pim.getHuman_input_port());
PIM_pim.getRequest_actuator_port().addListener(OnOffSet_onoff1.getRequire_val_port());
//Init instances (queues, etc)
TimerJava_g_temp.init();
TellstickManager_tlstick.init();
TempSim_tg.init();
ThermometerSet_T1.init();
OnOffSet_onoff1.init();
OnOffSim_onoffobs.init();
Human_myself.init();
TimerJava_g_humn.init();
PIM_pim.init();
TimerJava_timer.init();
GadgetSim_gdg.init();
//Network components for external connectors
/*$NETWORK$*/
//External Connectors
/*$EXT CONNECTORS$*/
/*$START$*/
TimerJava_g_temp.start();
OnOffSim_onoffobs.start();
OnOffSet_onoff1.start();
Human_myself.start();
TimerJava_g_humn.start();
PIM_pim.start();
TimerJava_timer.start();
TempSim_tg.start();
ThermometerSet_T1.start();
GadgetSim_gdg.start();
TellstickManager_tlstick.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
TellstickManager_tlstick.stop();
ThermometerSet_T1.stop();
TempSim_tg.stop();
TimerJava_timer.stop();
PIM_pim.stop();
Human_myself.stop();
TimerJava_g_temp.stop();
OnOffSet_onoff1.stop();
TimerJava_g_humn.stop();
OnOffSim_onoffobs.stop();
GadgetSim_gdg.stop();
/*$STOP$*/
}
});

}
}
