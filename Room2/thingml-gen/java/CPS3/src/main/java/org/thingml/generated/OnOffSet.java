/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : OnOffSet
 **/
public class OnOffSet extends Component implements IOnOffSet_require_val, IOnOffSet_initial {

private List<AttributeListener> attListener = new ArrayList<AttributeListener>();
public void addAttributeListener(AttributeListener listener){
this.attListener.add(listener);
}

public void removeAttributeListener(AttributeListener listener){
this.attListener.remove(listener);
}

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
@Override
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tts = " + OnOffSet_ts_var;
result += "\tonoffswitches = " + OnOffSet_onoffswitches_var;
result += "\tlast_onoff = " + OnOffSet_last_onoff_var;
result += "\tpoweron = " + OnOffSet_poweron_var;
result += "\ti = " + OnOffSet_i_var;
result += "\tdid = " + OnOffSet_did_var;
result += "\tmth = " + OnOffSet_mth_var;
result += "\tfound = " + OnOffSet_found_var;
result += "\tstatus = " + OnOffSet_status_var;
result += "";
return result;
}

private Collection<IOnOffSet_show_valClient> show_val_clients = Collections.synchronizedCollection(new LinkedList<IOnOffSet_show_valClient>());
public synchronized void registerOnShow_val(IOnOffSet_show_valClient client){
show_val_clients.add(client);
}

public synchronized void unregisterFromShow_val(IOnOffSet_show_valClient client){
show_val_clients.remove(client);
}

@Override
public synchronized void SwitchOn_via_require_val(short OnOffMsg_SwitchOn_did_var){
receive(SwitchOnType.instantiate(OnOffMsg_SwitchOn_did_var), require_val_port);
}

@Override
public synchronized void SwitchOff_via_require_val(short OnOffMsg_SwitchOff_did_var){
receive(SwitchOffType.instantiate(OnOffMsg_SwitchOff_did_var), require_val_port);
}

@Override
public synchronized void add_device_via_require_val(short DeviceGeneral_add_device_did_var){
receive(add_deviceType.instantiate(DeviceGeneral_add_device_did_var), require_val_port);
}

@Override
public synchronized void initialize_via_initial(String PSM_Msg_initialize_ts_var){
receive(initializeType.instantiate(PSM_Msg_initialize_ts_var), initial_port);
}

private void sendSwitchOn_via_show_val(short OnOffMsg_SwitchOn_did_var){
//ThingML send
show_val_port.send(SwitchOnType.instantiate(OnOffMsg_SwitchOn_did_var));
//send to other clients
for(IOnOffSet_show_valClient client : show_val_clients){
client.SwitchOn_from_show_val(OnOffMsg_SwitchOn_did_var);
}}

private void sendSwitchOff_via_show_val(short OnOffMsg_SwitchOff_did_var){
//ThingML send
show_val_port.send(SwitchOffType.instantiate(OnOffMsg_SwitchOff_did_var));
//send to other clients
for(IOnOffSet_show_valClient client : show_val_clients){
client.SwitchOff_from_show_val(OnOffMsg_SwitchOff_did_var);
}}

//Attributes
private String OnOffSet_ts_var;
private short[] OnOffSet_onoffswitches_var;
private short OnOffSet_last_onoff_var;
private boolean[] OnOffSet_poweron_var;
private short OnOffSet_i_var;
private short OnOffSet_did_var;
private int OnOffSet_mth_var;
private boolean OnOffSet_found_var;
private int OnOffSet_status_var;
private String debug_OnOffSet_ts_var;
private short[] debug_OnOffSet_onoffswitches_var;
private short debug_OnOffSet_last_onoff_var;
private boolean[] debug_OnOffSet_poweron_var;
private short debug_OnOffSet_i_var;
private short debug_OnOffSet_did_var;
private int debug_OnOffSet_mth_var;
private boolean debug_OnOffSet_found_var;
private int debug_OnOffSet_status_var;
//Ports
private Port require_val_port;
private Port initial_port;
private Port show_val_port;
//Message types
protected final InitializeMessageType initializeType = new InitializeMessageType();
public InitializeMessageType getInitializeType(){
return initializeType;
}

protected final SensorinfoMessageType sensorinfoType = new SensorinfoMessageType();
public SensorinfoMessageType getSensorinfoType(){
return sensorinfoType;
}

protected final DeviceinfoMessageType deviceinfoType = new DeviceinfoMessageType();
public DeviceinfoMessageType getDeviceinfoType(){
return deviceinfoType;
}

protected final Set_polling_intervalMessageType set_polling_intervalType = new Set_polling_intervalMessageType();
public Set_polling_intervalMessageType getSet_polling_intervalType(){
return set_polling_intervalType;
}

protected final PromptMessageType promptType = new PromptMessageType();
public PromptMessageType getPromptType(){
return promptType;
}

protected final SwitchOnMessageType SwitchOnType = new SwitchOnMessageType();
public SwitchOnMessageType getSwitchOnType(){
return SwitchOnType;
}

protected final SwitchOffMessageType SwitchOffType = new SwitchOffMessageType();
public SwitchOffMessageType getSwitchOffType(){
return SwitchOffType;
}

protected final Add_deviceMessageType add_deviceType = new Add_deviceMessageType();
public Add_deviceMessageType getAdd_deviceType(){
return add_deviceType;
}

//CEP Streams
//Empty Constructor
public OnOffSet() {
super();
OnOffSet_last_onoff_var = (short) 0;
}

//Constructor (all attributes)
public OnOffSet(String name, final String OnOffSet_ts_var, final short[] OnOffSet_onoffswitches_var, final short OnOffSet_last_onoff_var, final boolean[] OnOffSet_poweron_var, final short OnOffSet_i_var, final short OnOffSet_did_var, final int OnOffSet_mth_var, final boolean OnOffSet_found_var, final int OnOffSet_status_var) {
super(name);
this.OnOffSet_ts_var = OnOffSet_ts_var;
this.OnOffSet_onoffswitches_var = OnOffSet_onoffswitches_var;
this.OnOffSet_last_onoff_var = OnOffSet_last_onoff_var;
this.OnOffSet_poweron_var = OnOffSet_poweron_var;
this.OnOffSet_i_var = OnOffSet_i_var;
this.OnOffSet_did_var = OnOffSet_did_var;
this.OnOffSet_mth_var = OnOffSet_mth_var;
this.OnOffSet_found_var = OnOffSet_found_var;
this.OnOffSet_status_var = OnOffSet_status_var;
}

//Getters and Setters for non readonly/final attributes
public String getOnOffSet_ts_var() {
return OnOffSet_ts_var;
}

public void setOnOffSet_ts_var(String OnOffSet_ts_var) {
this.OnOffSet_ts_var = OnOffSet_ts_var;
}

public short[] getOnOffSet_onoffswitches_var() {
return OnOffSet_onoffswitches_var;
}

public void setOnOffSet_onoffswitches_var(short[] OnOffSet_onoffswitches_var) {
this.OnOffSet_onoffswitches_var = OnOffSet_onoffswitches_var;
}

public short getOnOffSet_last_onoff_var() {
return OnOffSet_last_onoff_var;
}

public void setOnOffSet_last_onoff_var(short OnOffSet_last_onoff_var) {
this.OnOffSet_last_onoff_var = OnOffSet_last_onoff_var;
}

public boolean[] getOnOffSet_poweron_var() {
return OnOffSet_poweron_var;
}

public void setOnOffSet_poweron_var(boolean[] OnOffSet_poweron_var) {
this.OnOffSet_poweron_var = OnOffSet_poweron_var;
}

public short getOnOffSet_i_var() {
return OnOffSet_i_var;
}

public void setOnOffSet_i_var(short OnOffSet_i_var) {
this.OnOffSet_i_var = OnOffSet_i_var;
}

public short getOnOffSet_did_var() {
return OnOffSet_did_var;
}

public void setOnOffSet_did_var(short OnOffSet_did_var) {
this.OnOffSet_did_var = OnOffSet_did_var;
}

public int getOnOffSet_mth_var() {
return OnOffSet_mth_var;
}

public void setOnOffSet_mth_var(int OnOffSet_mth_var) {
this.OnOffSet_mth_var = OnOffSet_mth_var;
}

public boolean getOnOffSet_found_var() {
return OnOffSet_found_var;
}

public void setOnOffSet_found_var(boolean OnOffSet_found_var) {
this.OnOffSet_found_var = OnOffSet_found_var;
}

public int getOnOffSet_status_var() {
return OnOffSet_status_var;
}

public void setOnOffSet_status_var(int OnOffSet_status_var) {
this.OnOffSet_status_var = OnOffSet_status_var;
}

//Getters for Ports
public Port getRequire_val_port() {
return require_val_port;
}
public Port getInitial_port() {
return initial_port;
}
public Port getShow_val_port() {
return show_val_port;
}
private CompositeState buildOnOffSet_behaviorOnOffSet(){
final List<AtomicState> states_OnOffSet_behaviorOnOffSet = new ArrayList<AtomicState>();
final AtomicState state_OnOffSet_behaviorOnOffSet_Init = new AtomicState("Init")
;
states_OnOffSet_behaviorOnOffSet.add(state_OnOffSet_behaviorOnOffSet_Init);
final AtomicState state_OnOffSet_behaviorOnOffSet_Idle = new AtomicState("Idle")
;
states_OnOffSet_behaviorOnOffSet.add(state_OnOffSet_behaviorOnOffSet_Idle);
final List<Region> regions_OnOffSet_behaviorOnOffSet = new ArrayList<Region>();
final List<Handler> transitions_OnOffSet_behaviorOnOffSet = new ArrayList<Handler>();
transitions_OnOffSet_behaviorOnOffSet.add(new Transition("1443242735",initializeType, initial_port, state_OnOffSet_behaviorOnOffSet_Init, state_OnOffSet_behaviorOnOffSet_Idle){
@Override
public void doExecute(final Event e) {
final InitializeMessageType.InitializeMessage initialize = (InitializeMessageType.InitializeMessage) e;
OnOffSet_ts_var = (String) (initialize.ts);
}

});
transitions_OnOffSet_behaviorOnOffSet.add(new Transition("1910741735",add_deviceType, require_val_port, state_OnOffSet_behaviorOnOffSet_Idle, state_OnOffSet_behaviorOnOffSet_Idle){
@Override
public void doExecute(final Event e) {
final Add_deviceMessageType.Add_deviceMessage add_device = (Add_deviceMessageType.Add_deviceMessage) e;
OnOffSet_did_var = (short) (add_device.did);
OnOffSet_onoffswitches_var[getOnOffSet_last_onoff_var()] = (short) (getOnOffSet_did_var());
OnOffSet_last_onoff_var = (short) (getOnOffSet_last_onoff_var() + 1);
}

});
transitions_OnOffSet_behaviorOnOffSet.add(new Transition("520716805",SwitchOnType, require_val_port, state_OnOffSet_behaviorOnOffSet_Idle, state_OnOffSet_behaviorOnOffSet_Idle){
@Override
public void doExecute(final Event e) {
final SwitchOnMessageType.SwitchOnMessage SwitchOn = (SwitchOnMessageType.SwitchOnMessage) e;
OnOffSet_did_var = (short) (SwitchOn.did);
OnOffSet_i_var = (short) (0);
OnOffSet_found_var = (boolean) (false);
while(getOnOffSet_i_var() < getOnOffSet_last_onoff_var() && ( !(getOnOffSet_found_var()))) {
if(getOnOffSet_did_var() == OnOffSet_onoffswitches_var[getOnOffSet_i_var()]
) {
OnOffSet_found_var = (boolean) (true);

}
OnOffSet_i_var = (short) (getOnOffSet_i_var() + 1);

}
if(getOnOffSet_found_var()) {
OnOffSet_poweron_var[getOnOffSet_i_var() - 1] = (boolean) (true);
sendSwitchOn_via_show_val((short) (getOnOffSet_did_var()));

}
}

});
transitions_OnOffSet_behaviorOnOffSet.add(new Transition("1581637624",SwitchOffType, require_val_port, state_OnOffSet_behaviorOnOffSet_Idle, state_OnOffSet_behaviorOnOffSet_Idle){
@Override
public void doExecute(final Event e) {
final SwitchOffMessageType.SwitchOffMessage SwitchOff = (SwitchOffMessageType.SwitchOffMessage) e;
OnOffSet_did_var = (short) (SwitchOff.did);
OnOffSet_i_var = (short) (0);
OnOffSet_found_var = (boolean) (false);
while(getOnOffSet_i_var() < getOnOffSet_last_onoff_var() && ( !(getOnOffSet_found_var()))) {
if(getOnOffSet_did_var() == OnOffSet_onoffswitches_var[getOnOffSet_i_var()]
) {
OnOffSet_found_var = (boolean) (true);

}
OnOffSet_i_var = (short) (getOnOffSet_i_var() + 1);

}
if(getOnOffSet_found_var()) {
OnOffSet_poweron_var[getOnOffSet_i_var() - 1] = (boolean) (false);
sendSwitchOff_via_show_val((short) (getOnOffSet_did_var()));

}
}

});
final CompositeState state_OnOffSet_behaviorOnOffSet = new CompositeState("behaviorOnOffSet", states_OnOffSet_behaviorOnOffSet, state_OnOffSet_behaviorOnOffSet_Init, transitions_OnOffSet_behaviorOnOffSet, regions_OnOffSet_behaviorOnOffSet, false);
return state_OnOffSet_behaviorOnOffSet;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
require_val_port = new Port(PortType.PROVIDED, "require_val", this);
initial_port = new Port(PortType.PROVIDED, "initial", this);
show_val_port = new Port(PortType.REQUIRED, "show_val", this);
} else {
require_val_port = ((OnOffSet)root).require_val_port;
initial_port = ((OnOffSet)root).initial_port;
show_val_port = ((OnOffSet)root).show_val_port;
}
createCepStreams();if (session == null){
//Init state machine
behavior = buildOnOffSet_behaviorOnOffSet();
}
return this;
}

}
